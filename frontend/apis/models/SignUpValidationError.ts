/* tslint:disable */
/* eslint-disable */
/**
 * (title)
 * A sample service
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface SignUpValidationError
 */
export interface SignUpValidationError {
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  firstName?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  lastName?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  email?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  password?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  birthday?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  frontIdentification?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof SignUpValidationError
   */
  backIdentification?: Array<string>;
}

/**
 * Check if a given object implements the SignUpValidationError interface.
 */
export function instanceOfSignUpValidationError(value: object): value is SignUpValidationError {
  return true;
}

export function SignUpValidationErrorFromJSON(json: any): SignUpValidationError {
  return SignUpValidationErrorFromJSONTyped(json, false);
}

export function SignUpValidationErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignUpValidationError {
  if (json == null) {
    return json;
  }
  return {
    firstName: json["firstName"] == null ? undefined : json["firstName"],
    lastName: json["lastName"] == null ? undefined : json["lastName"],
    email: json["email"] == null ? undefined : json["email"],
    password: json["password"] == null ? undefined : json["password"],
    birthday: json["birthday"] == null ? undefined : json["birthday"],
    frontIdentification: json["frontIdentification"] == null ? undefined : json["frontIdentification"],
    backIdentification: json["backIdentification"] == null ? undefined : json["backIdentification"],
  };
}

export function SignUpValidationErrorToJSON(json: any): SignUpValidationError {
  return SignUpValidationErrorToJSONTyped(json, false);
}

export function SignUpValidationErrorToJSONTyped(value?: SignUpValidationError | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    firstName: value["firstName"],
    lastName: value["lastName"],
    email: value["email"],
    password: value["password"],
    birthday: value["birthday"],
    frontIdentification: value["frontIdentification"],
    backIdentification: value["backIdentification"],
  };
}
